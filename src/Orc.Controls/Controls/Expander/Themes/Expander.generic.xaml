<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Orc.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Orc.Theming;component/themes/generic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Type controls:Expander}" 
           TargetType="{x:Type controls:Expander}"
           BasedOn="{StaticResource Orc.Styles.Control}">
        <Style.Resources>
            <Geometry x:Key="ExpanderUpArrow">M 1,4.5  L 4.5,1  L 8,4.5</Geometry>
            <Geometry x:Key="ExpanderDownArrow">M 1,1.5 L 4.5,5 L 8,1.5</Geometry>
            <Geometry x:Key="ExpanderLeftArrow">M 4.5,8 L 1,4.5 L 4.5,1</Geometry>
            <Geometry x:Key="ExpanderRightArrow">M 1.5,8 L 5,4.5 L 1,1.5</Geometry>

            <Style x:Key="ExpanderHeaderToggleButtonStyle" 
                   TargetType="{x:Type ToggleButton}"
                   BasedOn="{StaticResource Orc.Styles.ButtonBase}">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Chrome"
                                    AutomationProperties.AutomationId="Chrome"
                                    Padding="{TemplateBinding Padding}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="CommonStates">
                                        <VisualState Name="Unchecked" >
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                                                 Storyboard.TargetProperty="Angle" 
                                                                 From="180"
                                                                 To="0"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="Checked">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                                                 Storyboard.TargetProperty="Angle" 
                                                                 From="0"
                                                                 To="180"
                                                                 Duration="0:0:0.25" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid Background="Transparent" 
                                    SnapsToDevicePixels="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="16"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid>
                                        <Grid.LayoutTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <RotateTransform x:Name="RotateTransform" Angle="0"/>
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Grid.LayoutTransform>

                                        <Path x:Name="arrow" 
                                              Data="{TemplateBinding Path.Data}"
                                              HorizontalAlignment="Center"
                                              SnapsToDevicePixels="false" 
                                              Stroke="{TemplateBinding Foreground}"
                                              StrokeThickness="2"
                                              VerticalAlignment="Center"/>

                                    </Grid>

                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                      Margin="0"
                                                      Grid.Column="1"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="True"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="Control.IsMouseOver" Value="True">
                                    <Setter TargetName="Chrome" Property="Control.Background" Value="{DynamicResource Orc.Brushes.Control.MouseOver.Background}"/>
                                    <Setter TargetName="Chrome" Property="Control.BorderBrush" Value="{DynamicResource Orc.Brushes.Control.MouseOver.Border}"/>
                                    <Setter Property="Control.Foreground" Value="{DynamicResource Orc.Brushes.Control.MouseOver.Foreground}"/>
                                </Trigger>

                                <Trigger Property="ButtonBase.IsPressed" Value="True">
                                    <Setter TargetName="Chrome" Property="ButtonBase.Background" Value="{DynamicResource Orc.Brushes.Control.Pressed.Background}"/>
                                    <Setter TargetName="Chrome" Property="ButtonBase.BorderBrush" Value="{DynamicResource Orc.Brushes.Control.Pressed.Border}"/>
                                    <Setter Property="Control.Foreground" Value="{DynamicResource Orc.Brushes.Control.Pressed.Foreground}"/>
                                </Trigger>

                                <Trigger Property="Control.IsEnabled" Value="False">
                                    <Setter TargetName="Chrome" Property="Control.Background" Value="{DynamicResource Orc.Brushes.Control.Disabled.Background}"/>
                                    <Setter TargetName="Chrome" Property="Control.BorderBrush" Value="{DynamicResource Orc.Brushes.Control.Disabled.Border}"/>
                                    <Setter Property="Control.Foreground" Value="{DynamicResource Orc.Brushes.Control.Disabled.Foreground}"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
						    BorderThickness="0" 
						    Background="{TemplateBinding Background}" 
						    SnapsToDevicePixels="true">

                        <DockPanel>
                            <Border x:Name="PART_HeaderSiteBorder"
                                    Background="Transparent" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                                <ToggleButton x:Name="HeaderSite"
                                              AutomationProperties.AutomationId="HeaderSiteToggleButton"
                                              Style="{StaticResource ExpanderHeaderToggleButtonStyle}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                              Content="{TemplateBinding Header}" 
                                              Foreground="{TemplateBinding Foreground}" 
                                              FontWeight="{TemplateBinding FontWeight}" 
                                              FontStyle="{TemplateBinding FontStyle}" 
                                              FontStretch="{TemplateBinding FontStretch}" 
                                              FontSize="{TemplateBinding FontSize}" 
                                              FontFamily="{TemplateBinding FontFamily}" 
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              Padding="{TemplateBinding Padding}" 								            
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>

                            <ContentPresenter x:Name="PART_ExpandSite"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" 
                                              Focusable="false"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="DockPanel.Dock" TargetName="PART_ExpandSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="PART_HeaderSiteBorder" Value="Bottom" />
                            <Setter Property="Path.Data" TargetName="HeaderSite" Value="{StaticResource ExpanderDownArrow}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="PART_ExpandSite" Value="Bottom" />
                            <Setter Property="DockPanel.Dock" TargetName="PART_HeaderSiteBorder" Value="Top" />
                            <Setter Property="Path.Data" TargetName="HeaderSite" Value="{StaticResource ExpanderUpArrow}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="PART_ExpandSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="PART_HeaderSiteBorder" Value="Right" />
                            <Setter Property="Path.Data" TargetName="HeaderSite" Value="{StaticResource ExpanderRightArrow}" />
                        </Trigger>

                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="PART_ExpandSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="PART_HeaderSiteBorder" Value="Left" />
                            <Setter Property="Path.Data" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftArrow}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="PART_ExpandSite" Value="Hidden"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
