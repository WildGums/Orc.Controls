<catel:UserControl x:Class="Orc.Controls.Callout"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:orccontrols="clr-namespace:Orc.Controls"
                   xmlns:catel="http://schemas.catelproject.com"
                   mc:Ignorable="d"
                   d:DesignHeight="450"
                   d:DesignWidth="800"
                   xmlns:xamlbehaviors="http://schemas.microsoft.com/xaml/behaviors"
                   xmlns:system="clr-namespace:System;assembly=mscorlib"
                   xmlns:local="clr-namespace:Orc.Controls"
                   xmlns:orctheming="http://schemas.wildgums.com/orc/theming"
                   x:Name="calloutWindow">

    <UserControl.Resources>
        <system:Double x:Key="DefaultOpacity">1.0</system:Double>

        <Style x:Key="PolygonStyle"
               TargetType="{x:Type Polygon}">
            <Setter Property="Stretch"
                    Value="Fill" />
            <Setter Property="StrokeThickness"
                    Value="1.5" />
            <Setter Property="Stroke"
                    Value="{DynamicResource GrayBrush2}" />
            <Setter Property="Fill"
                    Value="{DynamicResource Orc.Brushes.Control.Default.Background}" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="5"
                                      Opacity="0.4" />
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Left Polygons -->
        <Style x:Key="LeftPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource PolygonStyle}">
            <Setter Property="Grid.Column"
                    Value="2" />
            <Setter Property="Grid.Row"
                    Value="1" />
            <Setter Property="Panel.ZIndex"
                    Value="100" />
            <Setter Property="Points"
                    Value="0,0 50,50, 0,100" />
            <Setter Property="Height"
                    Value="{Binding TailBaseWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Callout}}}" />
            <Setter Property="Width"
                    Value="{Binding HorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Callout}}}" />
        </Style>

        <Style x:Key="LeftCenterPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource LeftPolygonStyle}">
            <Setter Property="Margin"
                    Value="-2 0 0 0" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
        </Style>

        <Style x:Key="LeftTopPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource LeftPolygonStyle}">
            <Setter Property="Margin"
                    Value="-2 5 -2 0" />
            <Setter Property="VerticalAlignment"
                    Value="Top" />
        </Style>

        <Style x:Key="LeftBottomPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource LeftPolygonStyle}">
            <Setter Property="Margin"
                    Value="-2 0 0 15" />
            <Setter Property="VerticalAlignment"
                    Value="Bottom" />
        </Style>

        <!-- Right Polygons -->
        <Style x:Key="RightPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource PolygonStyle}">
            <Setter Property="Grid.Column"
                    Value="0" />
            <Setter Property="Grid.Row"
                    Value="1" />
            <Setter Property="Points"
                    Value="0,50 50,0, 50,100" />
            <Setter Property="Height"
                    Value="{Binding TailBaseWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Callout}}}" />
            <Setter Property="Width"
                    Value="{Binding HorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Callout}}}" />
        </Style>

        <Style x:Key="RightCenterPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource RightPolygonStyle}">
            <Setter Property="Margin"
                    Value="0 0 -2 0" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
        </Style>

        <Style x:Key="RightTopPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource RightPolygonStyle}">
            <Setter Property="Margin"
                    Value="0 5 -2 0" />
            <Setter Property="VerticalAlignment"
                    Value="Top" />
        </Style>

        <Style x:Key="RightBottomPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource RightPolygonStyle}">
            <Setter Property="Margin"
                    Value="0 0 -2 15" />
            <Setter Property="VerticalAlignment"
                    Value="Bottom" />
        </Style>

        <!-- Top Polygons -->
        <Style x:Key="TopPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource PolygonStyle}">
            <Setter Property="Grid.Column"
                    Value="1" />
            <Setter Property="Grid.Row"
                    Value="2" />
            <Setter Property="Panel.ZIndex"
                    Value="100" />
            <Setter Property="Points"
                    Value="0,0 100,0, 50,50" />
            <Setter Property="Width"
                    Value="{Binding TailBaseWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Callout}}}" />
            <Setter Property="Height"
                    Value="{Binding VerticalOffset, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Callout}}}" />
        </Style>

        <Style x:Key="TopCenterPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource TopPolygonStyle}">
            <Setter Property="Margin"
                    Value="0 -2 0 0" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
        </Style>

        <Style x:Key="TopLeftPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource TopPolygonStyle}">
            <Setter Property="Margin"
                    Value="5 -2 0 0" />
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
        </Style>

        <Style x:Key="TopRightPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource TopPolygonStyle}">
            <Setter Property="Margin"
                    Value="0 -2 15 0" />
            <Setter Property="HorizontalAlignment"
                    Value="Right" />
        </Style>


        <!-- Bottom Polygons -->
        <Style x:Key="BottomPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource PolygonStyle}">
            <Setter Property="Grid.Column"
                    Value="1" />
            <Setter Property="Grid.Row"
                    Value="0" />
            <Setter Property="Points"
                    Value="100,50, 50,0 0,50" />
            <Setter Property="Width"
                    Value="{Binding TailBaseWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Callout}}}" />
            <Setter Property="Height"
                    Value="{Binding VerticalOffset, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Callout}}}" />
        </Style>

        <Style x:Key="BottomCenterPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource BottomPolygonStyle}">
            <Setter Property="Margin"
                    Value="0 0 0 -2" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
        </Style>

        <Style x:Key="BottomLeftPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource BottomPolygonStyle}">
            <Setter Property="Margin"
                    Value="5 0 0 -2" />
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
        </Style>

        <Style x:Key="BottomRightPolygonStyle"
               TargetType="{x:Type Polygon}"
               BasedOn="{StaticResource BottomPolygonStyle}">
            <Setter Property="Margin"
                    Value="0 0 15 -2" />
            <Setter Property="HorizontalAlignment"
                    Value="Right" />
        </Style>
    </UserControl.Resources>

    <orccontrols:ApplicationPopup x:Name="Popup"
           VerticalOffset="18"
           IsOpen="{Binding IsOpen}"
           PlacementTarget="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Callout}}}"
           Placement="Custom"
           CustomPopupPlacementCallback="OnCustomPopupPlacement"
           StaysOpen="False"
           AllowsTransparency="True">

        <Border x:Name="ContentBorder"
                Padding="2 8 2 8"
                BorderBrush="Transparent"
                Opacity="1">

            <xamlbehaviors:Interaction.Triggers>
                <xamlbehaviors:EventTrigger EventName="MouseEnter">
                    <xamlbehaviors:InvokeCommandAction Command="{Binding PauseTimer}" />
                </xamlbehaviors:EventTrigger>

                <xamlbehaviors:EventTrigger EventName="MouseLeave">
                    <xamlbehaviors:InvokeCommandAction Command="{Binding ResumeTimer}" />
                </xamlbehaviors:EventTrigger>
            </xamlbehaviors:Interaction.Triggers>

            <Border.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <Storyboard SpeedRatio="4">
                            <DoubleAnimation To="{StaticResource DefaultOpacity}"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                    <BeginStoryboard>
                        <Storyboard SpeedRatio="4">
                            <DoubleAnimation To="0"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Border.Triggers>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Polygon x:Name="TailPolygon" />

                <Border x:Name="Border"
                        Grid.Row="1"
                        Grid.Column="1"
                        CornerRadius="5"
                        BorderThickness="1.5"
                        BorderBrush="{DynamicResource GrayBrush2}"
                        Background="{DynamicResource Orc.Brushes.Control.Default.Background}">

                    <Border.Effect>
                        <DropShadowEffect BlurRadius="5"
                                          Opacity="0.4" />
                    </Border.Effect>

                    <Grid>
                        <Grid Margin="4,0,4,4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0"
                                       Text="{Binding Title}"
                                       FontSize="{orctheming:FontSize 14}"
                                       FontWeight="Medium"
                                       Foreground="{DynamicResource Orc.Brushes.Control.Default.Foreground}"
                                       HorizontalAlignment="Left" />

                            <TextBlock Grid.Row="1"
                                       MaxWidth="200"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource Orc.Brushes.Control.Default.Foreground}"
                                       Text="{Binding Description}"
                                       TextWrapping="Wrap"
                                       Visibility="{Binding Description, Converter={catel:EmptyStringToCollapsingVisibilityConverter}}" />

                            <ContentPresenter Grid.Row="2"
                                              Content="{Binding InnerContent}" />
                        </Grid>

                        <Button Command="{Binding ClosePopup}"
                                Height="16"
                                Width="16"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Margin="4,6,6,4"
                                Visibility="{Binding IsClosable, Converter={catel:BooleanToHidingVisibilityConverter}}">
                            <Button.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.Triggers>
                                            <EventTrigger RoutedEvent="FrameworkElement.MouseEnter">
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="10"
                                                                Storyboard.TargetName="closePath">
                                                        <DoubleAnimation To="3"
                                                                         Storyboard.TargetProperty="StrokeThickness"
                                                                         Duration="0:0:2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="FrameworkElement.MouseLeave">
                                                <BeginStoryboard>
                                                    <Storyboard SpeedRatio="10"
                                                                Storyboard.TargetName="closePath">
                                                        <DoubleAnimation To="1"
                                                                         Storyboard.TargetProperty="StrokeThickness"
                                                                         Duration="0:0:2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Grid.Triggers>

                                        <Canvas Background="Transparent" />
                                        <Path HorizontalAlignment="Center"
                                              Margin="2"
                                              Stroke="Gray"
                                              StrokeThickness="1"
                                              SnapsToDevicePixels="True"
                                              Stretch="Fill"
                                              UseLayoutRounding="True"
                                              VerticalAlignment="Center"
                                              x:Name="closePath">
                                            <Path.Data>
                                                <PathGeometry>
                                                    <PathFigure StartPoint="0,0">
                                                        <LineSegment Point="14,14" />
                                                    </PathFigure>
                                                    <PathFigure StartPoint="14,0">
                                                        <LineSegment Point="0,14" />
                                                    </PathFigure>
                                                </PathGeometry>
                                            </Path.Data>
                                        </Path>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                </Border>

                <Rectangle  x:Name="BorderGapRectangle"
                            Panel.ZIndex="100"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Center"
                            Fill="{DynamicResource Orc.Brushes.Control.Default.Background}"
                            StrokeThickness="0"
                            Stroke="{DynamicResource Orc.Brushes.Control.Default.Background}"
                            Grid.Row="1"
                            Grid.Column="1" />
            </Grid>
        </Border>
    </orccontrols:ApplicationPopup>
</catel:UserControl>